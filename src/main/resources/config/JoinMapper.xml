<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="joinMapper">
    <!--
        Comment Board 관련 1:1의 관계 문제
        한개의 Comment는 한명의 작성자 정보를 가진다.
        게시물의 정보와 함께 작성자 정보를 함께 검색하고 싶다.
    -->

    <!-- Association -
            association indicates 1 : 1 relationship mapping -->
    <resultMap type="commentbDTO" id="associationMap">
        <id column="comment_No" property="commentNo"/>
        <result column="user_id" property="userId"/>
        <result column="comment_Content" property="commentContent"/>
        <result column="reg_Date" property="regDate"/>

        <association property="users" javaType="userDTO">
            <id column="user_id" property="userId"/>
            <result column="user_name" property="userName"/>
        </association>
    </resultMap>

    <select id="joinAssociation" resultMap="associationMap" >
        SELECT c.comment_No, c.user_id, u.user_name, c.comment_Content, c.reg_Date
        FROM commentb c JOIN users u
        ON c.user_id = u.user_id
    </select>


    <!--
        Comment Board 관련 1:M 다의 관계 문제 한개의 Comment는 여러명의 유저가 작성할 수 있다.
        게시물의 정보와 함꼐 작성자 정보를 함께 검색하고 싶다.
    -->
    <!-- Collection - 1 : M relationship mapping -->
    <resultMap type="commentbDTO" id="collectionMap">
        <id column="comment_no" property="commentNo"/>
        <result column="user_id" property="userId"/>
        <result column="comment_Content" property="commentContent"/>
        <result column="reg_date"  property="regDate"/>

        <collection property="replies" ofType="replyDTO">
            <id column="reply_no" property="replyNo"/>
            <result column="comment_No" property="commentNo"/>
            <result column="user_id" property="userId"/>
            <result column="reply_content" property="replyContent"/>
            <result column="reg_date"  property="regDate"/>
        </collection>
    </resultMap>

    <select id="joinCollection" resultMap="collectionMap">
        SELECT c.comment_no, c.user_id, c.comment_content, r.reply_no, r.reply_content, r.user_id, r.reg_date
        FROM commentB c JOIN reply r
        ON c.comment_no = r.comment_no
    </select>


    <!--
        User 관련 1:M 다 관계
        아이디에 해당하는 사람이 작성한 모든 게시물 정보 검색하기 (user 정보 + 게시물정보)
    -->
    <resultMap type="userDTO" id="collectionMap2">
        <id column="user_id" property="userId"/>
        <result column="user_name" property="userName"/>

        <collection property="comments" ofType="commentbDTO">
            <id column="comment_No" property="commentNo"/>
            <result column="user_id" property="userId"/>
            <result column="comment_content" property="commentContent"/>
            <result column="reg_date" property="regDate"/>
            <!-- <result column="" property="users"/> -->
        </collection>
    </resultMap>

    <select id="userCommentJoinCollection" resultMap="collectionMap2">
        SELECT user_id, user_name, comment_no, comment_content, reg_date
        FROM users JOIN commentb
        using(user_id)
    </select>


</mapper>